// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linear features colorGamut() linear feature returns the supplied color-gamut for 'p3' 1`] = `(color-gamut: p3)`;

exports[`linear features colorGamut() linear feature returns the supplied color-gamut for 'rec2020' 1`] = `(color-gamut: rec2020)`;

exports[`linear features colorGamut() linear feature returns the supplied color-gamut for 'srgb' 1`] = `(color-gamut: srgb)`;

exports[`linear features colorGamut() linear feature throws if no argument is supplied 1`] = `[cssapi-rhythm] color-gamut() Arguments included invalid value(s) – value: Value wasn't on the whitelist: ['srgb', 'p3', 'rec2020']`;

exports[`linear features displayMode() linear feature returns the supplied display-mode for 'browser' 1`] = `(display-mode: browser)`;

exports[`linear features displayMode() linear feature returns the supplied display-mode for 'fullscreen' 1`] = `(display-mode: fullscreen)`;

exports[`linear features displayMode() linear feature returns the supplied display-mode for 'minimal-ui' 1`] = `(display-mode: minimal-ui)`;

exports[`linear features displayMode() linear feature returns the supplied display-mode for 'standalone' 1`] = `(display-mode: standalone)`;

exports[`linear features displayMode() linear feature throws if no argument is supplied 1`] = `[cssapi-rhythm] display-mode() Arguments included invalid value(s) – value: Value wasn't on the whitelist: ['fullscreen', 'standalone', 'minimal-ui', 'browser']`;

exports[`linear features grid() linear feature returns a valueless grid 1`] = `(grid)`;

exports[`linear features grid() linear feature returns the supplied grid for '0' 1`] = `(grid: 0)`;

exports[`linear features grid() linear feature returns the supplied grid for '1' 1`] = `(grid: 1)`;

exports[`linear features orientation() linear feature returns the supplied orientation for 'landscape' 1`] = `(orientation: landscape)`;

exports[`linear features orientation() linear feature returns the supplied orientation for 'portrait' 1`] = `(orientation: portrait)`;

exports[`linear features orientation() linear feature throws if no argument is supplied 1`] = `[cssapi-rhythm] orientation() Arguments included invalid value(s) – value: Value wasn't on the whitelist: ['portrait', 'landscape']`;

exports[`linear features overflowBlock() linear feature returns the supplied overflow-block for 'none' 1`] = `(overflow-block: none)`;

exports[`linear features overflowBlock() linear feature returns the supplied overflow-block for 'optional-paged' 1`] = `(overflow-block: optional-paged)`;

exports[`linear features overflowBlock() linear feature returns the supplied overflow-block for 'scroll' 1`] = `(overflow-block: scroll)`;

exports[`linear features overflowBlock() linear feature throws if no argument is supplied 1`] = `[cssapi-rhythm] overflow-block() Arguments included invalid value(s) – value: Value wasn't on the whitelist: ['none', 'scroll', 'optional-paged']`;

exports[`linear features overflowInline() linear feature returns the supplied overflow-inline for 'none' 1`] = `(overflow-inline: none)`;

exports[`linear features overflowInline() linear feature returns the supplied overflow-inline for 'scroll' 1`] = `(overflow-inline: scroll)`;

exports[`linear features overflowInline() linear feature throws if no argument is supplied 1`] = `[cssapi-rhythm] overflow-inline() Arguments included invalid value(s) – value: Value wasn't on the whitelist: ['none', 'scroll']`;

exports[`linear features scan() linear feature returns the supplied scan for 'interlace' 1`] = `(scan: interlace)`;

exports[`linear features scan() linear feature returns the supplied scan for 'progressive' 1`] = `(scan: progressive)`;

exports[`linear features scan() linear feature throws if no argument is supplied 1`] = `[cssapi-rhythm] scan() Arguments included invalid value(s) – value: Value wasn't on the whitelist: ['interlace', 'progressive']`;

exports[`linear features update() linear feature returns a valueless update 1`] = `(update)`;

exports[`linear features update() linear feature returns the supplied update for 'fast' 1`] = `(update: fast)`;

exports[`linear features update() linear feature returns the supplied update for 'none' 1`] = `(update: none)`;

exports[`linear features update() linear feature returns the supplied update for 'slow' 1`] = `(update: slow)`;
