// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with a valid explicit value of '1 / 1' 1`] = `(aspect-ratio: 1 / 1)`;

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with a valid explicit value of '1/1' 1`] = `(aspect-ratio: 1/1)`;

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with a valid explicit value of '6 / 4' 1`] = `(aspect-ratio: 6 / 4)`;

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with a valid explicit value of '6/4' 1`] = `(aspect-ratio: 6/4)`;

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with a valid explicit value of '16 / 9' 1`] = `(aspect-ratio: 16 / 9)`;

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with a valid explicit value of '16/9' 1`] = `(aspect-ratio: 16/9)`;

exports[`ranged features aspect-ratio range features aspectRatio() returns the correct feature when called with existing breakpoint 1`] = `(aspect-ratio: 2/3)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with a valid explicit value of '1 / 1' 1`] = `(max-aspect-ratio: 1 / 1)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with a valid explicit value of '1/1' 1`] = `(max-aspect-ratio: 1/1)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with a valid explicit value of '6 / 4' 1`] = `(max-aspect-ratio: 6 / 4)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with a valid explicit value of '6/4' 1`] = `(max-aspect-ratio: 6/4)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with a valid explicit value of '16 / 9' 1`] = `(max-aspect-ratio: 16 / 9)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with a valid explicit value of '16/9' 1`] = `(max-aspect-ratio: 16/9)`;

exports[`ranged features aspect-ratio range features maxAspectRatio() returns the correct feature when called with existing breakpoint 1`] = `(max-aspect-ratio: 2/3)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with a valid explicit value of '1 / 1' 1`] = `(min-aspect-ratio: 1 / 1)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with a valid explicit value of '1/1' 1`] = `(min-aspect-ratio: 1/1)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with a valid explicit value of '6 / 4' 1`] = `(min-aspect-ratio: 6 / 4)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with a valid explicit value of '6/4' 1`] = `(min-aspect-ratio: 6/4)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with a valid explicit value of '16 / 9' 1`] = `(min-aspect-ratio: 16 / 9)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with a valid explicit value of '16/9' 1`] = `(min-aspect-ratio: 16/9)`;

exports[`ranged features aspect-ratio range features minAspectRatio() returns the correct feature when called with existing breakpoint 1`] = `(min-aspect-ratio: 2/3)`;

exports[`ranged features color range features color() returns the correct feature when called with a valid explicit value of '0' 1`] = `(color: 0)`;

exports[`ranged features color range features color() returns the correct feature when called with a valid explicit value of '78' 1`] = `(color: 78)`;

exports[`ranged features color range features color() returns the correct feature when called with a valid explicit value of 'undefined' 1`] = `(color)`;

exports[`ranged features color range features color() returns the correct feature when called with existing breakpoint 1`] = `(color: 1)`;

exports[`ranged features color range features color() returns the correct feature when called with no arguments 1`] = `(color)`;

exports[`ranged features color range features maxColor() returns the correct feature when called with a valid explicit value of '0' 1`] = `(max-color: 0)`;

exports[`ranged features color range features maxColor() returns the correct feature when called with a valid explicit value of '78' 1`] = `(max-color: 78)`;

exports[`ranged features color range features maxColor() returns the correct feature when called with existing breakpoint 1`] = `(max-color: 1)`;

exports[`ranged features color range features minColor() returns the correct feature when called with a valid explicit value of '0' 1`] = `(min-color: 0)`;

exports[`ranged features color range features minColor() returns the correct feature when called with a valid explicit value of '78' 1`] = `(min-color: 78)`;

exports[`ranged features color range features minColor() returns the correct feature when called with existing breakpoint 1`] = `(min-color: 1)`;

exports[`ranged features color-index range features colorIndex() returns the correct feature when called with a valid explicit value of '0' 1`] = `(color-index: 0)`;

exports[`ranged features color-index range features colorIndex() returns the correct feature when called with a valid explicit value of '78' 1`] = `(color-index: 78)`;

exports[`ranged features color-index range features colorIndex() returns the correct feature when called with a valid explicit value of 'undefined' 1`] = `(color-index)`;

exports[`ranged features color-index range features colorIndex() returns the correct feature when called with existing breakpoint 1`] = `(color-index: 1)`;

exports[`ranged features color-index range features colorIndex() returns the correct feature when called with no arguments 1`] = `(color-index)`;

exports[`ranged features color-index range features maxColorIndex() returns the correct feature when called with a valid explicit value of '0' 1`] = `(max-color-index: 0)`;

exports[`ranged features color-index range features maxColorIndex() returns the correct feature when called with a valid explicit value of '78' 1`] = `(max-color-index: 78)`;

exports[`ranged features color-index range features maxColorIndex() returns the correct feature when called with existing breakpoint 1`] = `(max-color-index: 1)`;

exports[`ranged features color-index range features minColorIndex() returns the correct feature when called with a valid explicit value of '0' 1`] = `(min-color-index: 0)`;

exports[`ranged features color-index range features minColorIndex() returns the correct feature when called with a valid explicit value of '78' 1`] = `(min-color-index: 78)`;

exports[`ranged features color-index range features minColorIndex() returns the correct feature when called with existing breakpoint 1`] = `(min-color-index: 1)`;

exports[`ranged features height range features height() doesn't separate values if not configured to do so 1`] = `(height: 25em)`;

exports[`ranged features height range features height() renders configured dimensionsUnits 1`] = `(height: 25rem)`;

exports[`ranged features height range features height() renders configured dimensionsUnits 2`] = `(height: 400px)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '0' 1`] = `(height: 0em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '0' 2`] = `(height: 0em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '78' 1`] = `(height: 4.875em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '78' 2`] = `(height: 4.875em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '163em' 1`] = `(height: 163em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '163em' 2`] = `(height: 163em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '163px' 1`] = `(height: 10.1875em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '163px' 2`] = `(height: 10.1875em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '163rem' 1`] = `(height: 163em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '163rem' 2`] = `(height: 163em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '555em' 1`] = `(height: 555em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '555em' 2`] = `(height: 555em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '555px' 1`] = `(height: 34.6875em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '555px' 2`] = `(height: 34.6875em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '555rem' 1`] = `(height: 555em)`;

exports[`ranged features height range features height() returns the correct feature when called with a valid explicit value of '555rem' 2`] = `(height: 555em)`;

exports[`ranged features height range features height() returns the correct feature when called with existing breakpoint 1`] = `(height: 25em)`;

exports[`ranged features height range features maxHeight() doesn't separate values if not configured to do so 1`] = `(height: 25em)`;

exports[`ranged features height range features maxHeight() renders configured dimensionsUnits 1`] = `(height: 25rem)`;

exports[`ranged features height range features maxHeight() renders configured dimensionsUnits 2`] = `(height: 400px)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '0' 1`] = `(max-height: -0.000625em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '0' 2`] = `(max-height: -0.000625em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '0' 3`] = `(max-height: -0.000625em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '78' 1`] = `(max-height: 4.874375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '78' 2`] = `(max-height: 4.874375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '78' 3`] = `(max-height: 4.874375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163em' 1`] = `(max-height: 162.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163em' 2`] = `(max-height: 162.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163em' 3`] = `(max-height: 162.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163px' 1`] = `(max-height: 10.186875em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163px' 2`] = `(max-height: 10.186875em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163px' 3`] = `(max-height: 10.186875em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163rem' 1`] = `(max-height: 162.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163rem' 2`] = `(max-height: 162.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '163rem' 3`] = `(max-height: 162.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555em' 1`] = `(max-height: 554.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555em' 2`] = `(max-height: 554.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555em' 3`] = `(max-height: 554.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555px' 1`] = `(max-height: 34.686875em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555px' 2`] = `(max-height: 34.686875em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555px' 3`] = `(max-height: 34.686875em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555rem' 1`] = `(max-height: 554.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555rem' 2`] = `(max-height: 554.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with a valid explicit value of '555rem' 3`] = `(max-height: 554.999375em)`;

exports[`ranged features height range features maxHeight() returns the correct feature when called with existing breakpoint 1`] = `(max-height: 24.999375em)`;

exports[`ranged features height range features minHeight() doesn't separate values if not configured to do so 1`] = `(height: 25em)`;

exports[`ranged features height range features minHeight() renders configured dimensionsUnits 1`] = `(height: 25rem)`;

exports[`ranged features height range features minHeight() renders configured dimensionsUnits 2`] = `(height: 400px)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '0' 1`] = `(min-height: 0em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '0' 2`] = `(min-height: 0em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '78' 1`] = `(min-height: 4.875em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '78' 2`] = `(min-height: 4.875em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '163em' 1`] = `(min-height: 163em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '163em' 2`] = `(min-height: 163em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '163px' 1`] = `(min-height: 10.1875em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '163px' 2`] = `(min-height: 10.1875em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '163rem' 1`] = `(min-height: 163em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '163rem' 2`] = `(min-height: 163em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '555em' 1`] = `(min-height: 555em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '555em' 2`] = `(min-height: 555em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '555px' 1`] = `(min-height: 34.6875em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '555px' 2`] = `(min-height: 34.6875em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '555rem' 1`] = `(min-height: 555em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with a valid explicit value of '555rem' 2`] = `(min-height: 555em)`;

exports[`ranged features height range features minHeight() returns the correct feature when called with existing breakpoint 1`] = `(min-height: 25em)`;

exports[`ranged features monochrome range features maxMonochrome() returns the correct feature when called with a valid explicit value of '0' 1`] = `(max-monochrome: 0)`;

exports[`ranged features monochrome range features maxMonochrome() returns the correct feature when called with a valid explicit value of '78' 1`] = `(max-monochrome: 78)`;

exports[`ranged features monochrome range features maxMonochrome() returns the correct feature when called with existing breakpoint 1`] = `(max-monochrome: 0)`;

exports[`ranged features monochrome range features minMonochrome() returns the correct feature when called with a valid explicit value of '0' 1`] = `(min-monochrome: 0)`;

exports[`ranged features monochrome range features minMonochrome() returns the correct feature when called with a valid explicit value of '78' 1`] = `(min-monochrome: 78)`;

exports[`ranged features monochrome range features minMonochrome() returns the correct feature when called with existing breakpoint 1`] = `(min-monochrome: 0)`;

exports[`ranged features monochrome range features monochrome() returns the correct feature when called with a valid explicit value of '0' 1`] = `(monochrome: 0)`;

exports[`ranged features monochrome range features monochrome() returns the correct feature when called with a valid explicit value of '78' 1`] = `(monochrome: 78)`;

exports[`ranged features monochrome range features monochrome() returns the correct feature when called with a valid explicit value of 'undefined' 1`] = `(monochrome)`;

exports[`ranged features monochrome range features monochrome() returns the correct feature when called with existing breakpoint 1`] = `(monochrome: 0)`;

exports[`ranged features monochrome range features monochrome() returns the correct feature when called with no arguments 1`] = `(monochrome)`;

exports[`ranged features resolution range features maxResolution() doesn't separate values if not configured to do so 1`] = `(resolution: 72dpi)`;

exports[`ranged features resolution range features maxResolution() returns the correct feature when called with a valid explicit value of '78' 1`] = `(max-resolution: 77dpi)`;

exports[`ranged features resolution range features maxResolution() returns the correct feature when called with a valid explicit value of '78' 2`] = `(max-resolution: 77dpi)`;

exports[`ranged features resolution range features maxResolution() returns the correct feature when called with a valid explicit value of '111dpi' 1`] = `(max-resolution: 110dpi)`;

exports[`ranged features resolution range features maxResolution() returns the correct feature when called with a valid explicit value of '111dpi' 2`] = `(max-resolution: 110dpi)`;

exports[`ranged features resolution range features maxResolution() returns the correct feature when called with existing breakpoint 1`] = `(max-resolution: 71dpi)`;

exports[`ranged features resolution range features minResolution() doesn't separate values if not configured to do so 1`] = `(resolution: 72dpi)`;

exports[`ranged features resolution range features minResolution() returns the correct feature when called with a valid explicit value of '78' 1`] = `(min-resolution: 78dpi)`;

exports[`ranged features resolution range features minResolution() returns the correct feature when called with a valid explicit value of '78' 2`] = `(min-resolution: 78dpi)`;

exports[`ranged features resolution range features minResolution() returns the correct feature when called with a valid explicit value of '111dpi' 1`] = `(min-resolution: 111dpi)`;

exports[`ranged features resolution range features minResolution() returns the correct feature when called with a valid explicit value of '111dpi' 2`] = `(min-resolution: 111dpi)`;

exports[`ranged features resolution range features minResolution() returns the correct feature when called with existing breakpoint 1`] = `(min-resolution: 72dpi)`;

exports[`ranged features resolution range features resolution() doesn't separate values if not configured to do so 1`] = `(resolution: 72dpi)`;

exports[`ranged features resolution range features resolution() returns the correct feature when called with a valid explicit value of '78' 1`] = `(resolution: 78dpi)`;

exports[`ranged features resolution range features resolution() returns the correct feature when called with a valid explicit value of '78' 2`] = `(resolution: 78dpi)`;

exports[`ranged features resolution range features resolution() returns the correct feature when called with a valid explicit value of '111dpi' 1`] = `(resolution: 111dpi)`;

exports[`ranged features resolution range features resolution() returns the correct feature when called with a valid explicit value of '111dpi' 2`] = `(resolution: 111dpi)`;

exports[`ranged features resolution range features resolution() returns the correct feature when called with existing breakpoint 1`] = `(resolution: 72dpi)`;

exports[`ranged features width range features maxWidth() doesn't separate values if not configured to do so 1`] = `(width: 25em)`;

exports[`ranged features width range features maxWidth() renders configured dimensionsUnits 1`] = `(width: 25rem)`;

exports[`ranged features width range features maxWidth() renders configured dimensionsUnits 2`] = `(width: 400px)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '0' 1`] = `(max-width: -0.000625em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '0' 2`] = `(max-width: -0.000625em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '78' 1`] = `(max-width: 4.874375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '78' 2`] = `(max-width: 4.874375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '163em' 1`] = `(max-width: 162.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '163em' 2`] = `(max-width: 162.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '163px' 1`] = `(max-width: 10.186875em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '163px' 2`] = `(max-width: 10.186875em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '163rem' 1`] = `(max-width: 162.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '163rem' 2`] = `(max-width: 162.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '555em' 1`] = `(max-width: 554.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '555em' 2`] = `(max-width: 554.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '555px' 1`] = `(max-width: 34.686875em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '555px' 2`] = `(max-width: 34.686875em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '555rem' 1`] = `(max-width: 554.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with a valid explicit value of '555rem' 2`] = `(max-width: 554.999375em)`;

exports[`ranged features width range features maxWidth() returns the correct feature when called with existing breakpoint 1`] = `(max-width: 24.999375em)`;

exports[`ranged features width range features minWidth() doesn't separate values if not configured to do so 1`] = `(width: 25em)`;

exports[`ranged features width range features minWidth() renders configured dimensionsUnits 1`] = `(width: 25rem)`;

exports[`ranged features width range features minWidth() renders configured dimensionsUnits 2`] = `(width: 400px)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '0' 1`] = `(min-width: 0em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '0' 2`] = `(min-width: 0em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '78' 1`] = `(min-width: 4.875em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '78' 2`] = `(min-width: 4.875em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '163em' 1`] = `(min-width: 163em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '163em' 2`] = `(min-width: 163em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '163px' 1`] = `(min-width: 10.1875em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '163px' 2`] = `(min-width: 10.1875em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '163rem' 1`] = `(min-width: 163em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '163rem' 2`] = `(min-width: 163em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '555em' 1`] = `(min-width: 555em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '555em' 2`] = `(min-width: 555em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '555px' 1`] = `(min-width: 34.6875em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '555px' 2`] = `(min-width: 34.6875em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '555rem' 1`] = `(min-width: 555em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with a valid explicit value of '555rem' 2`] = `(min-width: 555em)`;

exports[`ranged features width range features minWidth() returns the correct feature when called with existing breakpoint 1`] = `(min-width: 25em)`;

exports[`ranged features width range features width() doesn't separate values if not configured to do so 1`] = `(width: 25em)`;

exports[`ranged features width range features width() renders configured dimensionsUnits 1`] = `(width: 25rem)`;

exports[`ranged features width range features width() renders configured dimensionsUnits 2`] = `(width: 400px)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '0' 1`] = `(width: 0em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '0' 2`] = `(width: 0em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '78' 1`] = `(width: 4.875em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '78' 2`] = `(width: 4.875em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '163em' 1`] = `(width: 163em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '163em' 2`] = `(width: 163em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '163px' 1`] = `(width: 10.1875em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '163px' 2`] = `(width: 10.1875em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '163rem' 1`] = `(width: 163em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '163rem' 2`] = `(width: 163em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '555em' 1`] = `(width: 555em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '555em' 2`] = `(width: 555em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '555px' 1`] = `(width: 34.6875em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '555px' 2`] = `(width: 34.6875em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '555rem' 1`] = `(width: 555em)`;

exports[`ranged features width range features width() returns the correct feature when called with a valid explicit value of '555rem' 2`] = `(width: 555em)`;

exports[`ranged features width range features width() returns the correct feature when called with existing breakpoint 1`] = `(width: 25em)`;
