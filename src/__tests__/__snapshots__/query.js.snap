// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`query and renders query with multiple features anded together 1`] = `
@media (color-gamut: srgb) and (min-width: 25em) and (orientation: landscape) and (grid) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query and renders query with two features anded together 1`] = `
@media (min-width: 25em) and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query mixed allows mixed not queries (both and and or) 1`] = `
@media not screen and (display-mode: fullscreen), not screen and (color-gamut: rec2020), not screen and (grid: 0) and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query mixed allows mixed queries (both and and or) 1`] = `
@media (display-mode: fullscreen),(color-gamut: rec2020),(display-mode: standalone) and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query mixed allows mixed queries and not queries (both and and or) 1`] = `
@media (grid),(color-gamut: rec2020),(grid: 1) and (orientation: landscape),not screen and (grid), not screen and (width: 68.75em) and (orientation: portrait) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query not negates anded queries 1`] = `
@media not screen and (display-mode: fullscreen) and (color-gamut: p3) and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query not negates ored queries 1`] = `
@media not screen and (display-mode: fullscreen), not screen and (color-gamut: p3), not screen and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query not with media type negates anded queries without adding default media type 1`] = `
@media not screen and (display-mode: fullscreen) and (color-gamut: p3) and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query not with media type negates ored queries without adding default media type 1`] = `
@media not screen, not screen and (display-mode: fullscreen), not screen and (color-gamut: p3), not screen and (orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query not with media type renders single uquery with media type without adding default media type 1`] = `
@media not screen, not screen and (display-mode: fullscreen) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query or renders query with multiple features ored together 1`] = `
@media (color-gamut: srgb),(min-width: 25em),(orientation: landscape),(grid) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query or renders query with two features ored together 1`] = `
@media (min-width: 25em),(orientation: landscape) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query renders query with single feature 1`] = `
@media (min-width: 25em) {
    background-color: function () {
        return 'GhostWhite';
    }; ;
}
`;

exports[`query throws with invalid argument [object Object] 1`] = `You must only supply strings or arrays to 'query()' but you supplied '[object Object]'`;

exports[`query throws with invalid argument -0.4 1`] = `You must only supply strings or arrays to 'query()' but you supplied '-0.4'`;

exports[`query throws with invalid argument -6 1`] = `You must only supply strings or arrays to 'query()' but you supplied '-6'`;

exports[`query throws with invalid argument -90 1`] = `You must only supply strings or arrays to 'query()' but you supplied '-90'`;

exports[`query throws with invalid argument -99.8 1`] = `You must only supply strings or arrays to 'query()' but you supplied '-99.8'`;

exports[`query throws with invalid argument 0 1`] = `You must only supply strings or arrays to 'query()' but you supplied '0'`;

exports[`query throws with invalid argument 0.6 1`] = `You must only supply strings or arrays to 'query()' but you supplied '0.6'`;

exports[`query throws with invalid argument 44.7 1`] = `You must only supply strings or arrays to 'query()' but you supplied '44.7'`;

exports[`query throws with invalid argument 78 1`] = `You must only supply strings or arrays to 'query()' but you supplied '78'`;

exports[`query throws with invalid argument 4999 1`] = `You must only supply strings or arrays to 'query()' but you supplied '4999'`;

exports[`query throws with invalid argument NaN 1`] = `You must only supply strings or arrays to 'query()' but you supplied 'NaN'`;

exports[`query throws with invalid argument false 1`] = `You must only supply strings or arrays to 'query()' but you supplied 'false'`;

exports[`query throws with invalid argument null 1`] = `You must only supply strings or arrays to 'query()' but you supplied 'null'`;

exports[`query throws with invalid argument true 1`] = `You must only supply strings or arrays to 'query()' but you supplied 'true'`;

exports[`query throws with invalid argument undefined 1`] = `You must only supply strings or arrays to 'query()' but you supplied 'undefined'`;

exports[`query throws with no arguments 1`] = `You must supply at least one argument to 'query()' to build a valid media query`;
